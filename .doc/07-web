IF SERVER APACHE

Install and allow Apache
$ sudo apt-get install apache2 openssl
$ sudo ufw allow 'WWW Full'

sudo apachectl configtest
sudo a2enmod ssl

Create auto-signed ssl
$ sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/apache.key -out /etc/ssl/certs/apache.crt

Rendre la redirection de http vers https permanante
$ sudo vim /etc/apache2/sites-available/000-default.conf
'
  Redirect permanent "/" "https://10.12.11.35"
'
$ sudo a2ensite 000-default
$ sudo service apache2 restart

Propose a vitrine website
$ cd /var/www
$ sudo apt-get install curl -y
$ sudo curl -o vitrine.zip  "http://www.frugalprototype.com/wp-content/uploads/2015/11/vitrine.zip"
$ unzip vitrine.zip

$ sudo cp /etc/apache2/sites-available/default-ssl.conf /etc/apache2/sites-available/vitrinewebsite.conf
$ sudo vim /etc/apache2/sites-available/vitrinewebsite.conf
'
		ServerName 10.12.11.35
		DocumentRoot /var/www/vitrinewebsite

    SSLCertificateFile	/etc/ssl/certs/apache.crt
		SSLCertificateKeyFile /etc/ssl/private/apache.key
'
$ sudo a2ensite vitrinewebsite.conf
$ sudo systemctl restart apache2

---------------------------------------------------------------------------------------------------------------------
IF SERVER NGINX --

Allow Nginx connections
$ sudo ufw allow 'Nginx Full'

Create auto-signed ssl
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/nginx-selfsigned.key -out /etc/ssl/certs/nginx-selfsigned.crt

Create dh group
$ sudo openssl dhparam -out /etc/nginx/dhparam.pem 512
$ sudo touch /etc/nginx/snippets/self-signed.conf

Create a file /etc/nginx/snippets/self-signed.conf
'
  ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
  ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
'
$ sudo sh -c "echo 'ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;\nssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;\n' > /etc/nginx/snippets/self-signed.conf"

Create a file ssl-params.conf in /etc/nginx/snippets/  //=> cypher for ssl security
'
  #From Cipherli.st
  ssl_protocols TLSv1.2; # Requires nginx >= 1.13.0 else use TLSv1.2
  ssl_prefer_server_ciphers on;
  ssl_dhparam /etc/nginx/dhparam.pem; # openssl dhparam -out /etc/nginx/dhparam.pem 2048
  ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
  ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
  ssl_session_timeout  10m;
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off; # Requires nginx >= 1.5.9
  ssl_stapling on; # Requires nginx >= 1.3.7
  ssl_stapling_verify on; # Requires nginx => 1.3.7
  resolver 8.8.8.8 8.8.4.4 valid=300s;
  resolver_timeout 5s;
  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
'

Create a file /etc/nginx/sites-available/landing.conf
'
  server {
      listen 192.168.56.2:443 ssl;
          include snippets/self-signed.conf;
          include snippets/ssl-params.conf;

          root /var/www/landing;

          # Add index.php to the list if you are using PHP
          index index.html index.htm index.nginx-debian.html index.php;

          server_name 192.168.56.2;

          location / {
                  try_files $uri $uri/ =404;
          }

  }
  server {
      listen 192.168.56.2:80;
      server_name 192.168.56.2;

      return 301 https://$server_name$request_uri;
  }
'

Link 2 files and remove the default one
$ sudo ln -s /etc/nginx/sites-available/landing.conf /etc/nginx/sites-enabled/landing.conf
$ sudo rm -rf /etc/nginx/sites-enabled/default

Restart nginx
$ sudo systemctl restart nginx

Propose a vitrine website
$ cd /var/www/html
$ sudo curl -o vitrine.zip  "http://www.frugalprototype.com/wp-content/uploads/2015/11/vitrine.zip"
$ unzip vitrine.zip
Move the content into a /landing directory

